"""
File:           test_alice_blue_streams.py
Author:         Dibyaranjan Sathua
Created on:     26/07/21, 10:24 am
"""
from alice_blue_api.websocket_streams import MarketData, CompactMarketData, get_mode_from_stream


def test_websocket_streams():
    """ Testing websocket streams """
    # binary_data = b'\x01\x02\x00\x00\xab\xa6\x00\x00e\t`\xd0+[\x00\x00\x00\x19\x00\x06V]\x00' \
    #               b'\x00d\xcd\x00\x00\x00K\x00\x00e;\x00\x00\x00d\x00\x00\x00\x00\x00\x00\\\xc6' \
    #               b'\x00\x00\x00\x00\x00\x00\\\xad\x00\x00`X`\xd0+d\x00\x00Y.\x00\x00rB\x00' \
    #               b'\x00B\x81\x00\x00\x96s\x00\x00rB\x00\x00\x00\x00\x00\x00\x00\x05\x00\x02' \
    #               b'\xec\xfc\x00\x02\x12F\x00\x01qV'

    binary_data = b'\x01\x02\x00\x00\xab\xa6\x00\x00e\t`\xd0+[\x00\x00\x00\x19\x00\x06V]\x00' \
                  b'\x00e\x13\x00\x00\x00K\x00\x00er\x00\x00\x00\x19\x00\x00\x00\x00\x00' \
                  b'\x00]\\\x00\x00\x00\x00\x00\x00\\0\x00\x00`X`\xd0+g\x00\x00Y.\x00\x00rB' \
                  b'\x00\x00B\x81\x00\x00\x96s\x00\x00rB\x00\x00\x00\x00'
    binary_data = b'\x01\x02\x00\x00\xcc\x12\x00\x00\xb0,`\xd4W\x9e\x00\x00\x00\x19\x00\x19x' \
                  b'\xb4\x00\x00\xb0"\x00\x00\x002\x00\x00\xb7\x98\x00\x00\x002\x00\x00\x00' \
                  b'\x00\x00\x00k!\x00\x00\x00\x00\x00\x00Rl\x00\x00\xafr`\xd4W\xa0\x00\x00\x95' \
                  b'\xce\x00\x00\xcf\x03\x00\x00\x8a \x00\x00\x94f\x00\x00\xcf\x03\x00\x00\x00\x00'
    binary_data = b"\x01\x02\x00\x00\xcc\x13\x00\x00\x83\x8b`\xd4W\x9f\x00\x00\x00\xaf\x00\x15" \
                  b"\x0f6\x00\x00\x7f\xbc\x00\x00\x00\xc8\x00\x00\x83\x8b\x00\x00\x00\x19\x00" \
                  b"\x00\x00\x00\x00\x00h\xfb\x00\x00\x00\x00\x00\x00xP\x00\x00\x91P`\xd4W" \
                  b"\xa0\x00\x00\xc9@\x00\x00\xd3'\x00\x00}\x00\x00\x00\xcag\x00\x00\xd3'\x00\
                  x00\x00\x00"
    data = MarketData.create(binary_data)
    print(data.token)
    print(data.ltp)
    print(data.open)
    print(data.close)
    print(data.high)
    print(data.low)
    print(data.last_trade_time)
    print(data.exchange_timestamp)


def test_websocket_compact_market():
    binary_data = b'\x02\x02\x00\x00\xcc\x12\x00\x00\xb0,\x00\x00\x1b\xc6`\xd4W\x9e\x00\x00\x00' \
                  b'\x05\x00\x03\x0by\x00\x02\xba\x89\x00\x01\xbfD\x00\x00\xb0"\x00\x00\xb7\x98'
    # binary_data = b'\x02\x02\x00\x00\xcc\x13\x00\x00\x83\x8b\xff\xff\xb9$`\xd4W\x9f\x00\x00\x00' \
    #               b'\x05\x00\x03\x90X\x00\x02\x98t\x00\x00\x81L\x00\x00\x7f\xbc\x00\x00\x83\x8b'
    binary_data = b'\x02\x02\x00\x00\xcf\xbb\x005v\xd6\x00\x00v\xe3`\xd4W\x9f\x000\x117\x00:\xbf' \
                  b'\xb0\x00\x1c\xdf\xe5\x00\x11\xaf\xa3\x005t`\x005w\x1c'

    binary_data = b'\x02\x02\x00\x00\xd1]\x00\x00\x82U\xff\xff\xd5\xe4`\xfe?\xb7\x00\x00\x00\x05' \
                  b'\x00\x03\xa4?\x00\x0b\xd53\x00\x06\xed>\x00\x00\x82\xdc\x00\x00\x83\x18'
    # binary_data = b'\x02\x02\x00\x00\xd1_\x00\x00R\x17\x00\x00\x07\xe4`\xfe?\xb9\x00\x85\x15\xec`\xfe?\xb9'
    # binary_data = b"\x02\x02\x00\x00\xcf\xbb\x005H<\xff\xff\xd0b`\xfe?\xb7\x000\x1f\x15\x00:\xd0\xa4\x00\x17I\t\x00\x01'\x9b\x005H\xd7\x005I\x04"
    # binary_data = b'\x02\x02\x00\x00\xd1]\x00\x00\x82_\xff\xff\xd5\xee`\xfe?\xba\x00f\xf7``\xfe?\xba'
    # binary_data = b'\x02\x02\x00\x00\xd1_\x00\x00Q\xea\x00\x00\x07\xb7`\xfe?\xba\x00\x85\x1b2`\xfe?\xba'
    # binary_data = b'\x02\x02\x00\x00\xd1]\x00\x00\x82\xaa\xff\xff\xd69`\xfe?\xbb\x00f\xf7\xdd`\xfe?\xbb'
    # binary_data = b'\x02\x02\x00\x00\xd1_\x00\x00Q\xea\x00\x00\x07\xb7`\xfe?\xbe\x00\x85\x1f\xe2`\xfe?\xbe'

    binary_data = b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88H\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    binary_data = b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88K\x00\x00\x00\x00`\xfe\x88K'
    binary_data = b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88T\x00\x00\x00\x00`\xfe\x88T'
    mode = get_mode_from_stream(binary_data)
    print(mode)
    print(len(binary_data))
    data = CompactMarketData.create(binary_data)
    print(data)
    print(data.code)
    print(data.ltp)


if __name__ == "__main__":
    test_websocket_compact_market()


"""
b'\x02\x02\x00\x00\xd1]\x00\x00\x82U\xff\xff\xd5\xe4`\xfe?\xb7\x00\x00\x00\x05\x00\x03\xa4?\x00\x0b\xd53\x00\x06\xed>\x00\x00\x82\xdc\x00\x00\x83\x18'
b'\x02\x02\x00\x00\xd1_\x00\x00R\x17\x00\x00\x07\xe4`\xfe?\xb9\x00\x85\x15\xec`\xfe?\xb9'
b"\x02\x02\x00\x00\xcf\xbb\x005H<\xff\xff\xd0b`\xfe?\xb7\x000\x1f\x15\x00:\xd0\xa4\x00\x17I\t\x00\x01'\x9b\x005H\xd7\x005I\x04"
b'\x02\x02\x00\x00\xd1]\x00\x00\x82_\xff\xff\xd5\xee`\xfe?\xba\x00f\xf7``\xfe?\xba'
b'\x02\x02\x00\x00\xd1_\x00\x00Q\xea\x00\x00\x07\xb7`\xfe?\xba\x00\x85\x1b2`\xfe?\xba'

b'\x02\x02\x00\x00\xd1]\x00\x00\x82\xaa\xff\xff\xd69`\xfe?\xbb\x00f\xf7\xdd`\xfe?\xbb'
b'\x02\x02\x00\x00\xd1_\x00\x00RD\x00\x00\x08\x11`\xfe?\xbb\x00\x85\x1b\xc8`\xfe?\xba'
b'\x02\x02\x00\x00\xcf\xbb\x005H\xc8\xff\xff\xd0\xee`\xfe?\xbc\x00\x0e3\x8c`\xfe?\xbb'
b'\x02\x02\x00\x00\xd1]\x00\x00\x83;\xff\xff\xd6\xca`\xfe?\xbc\x00f\xf8\xa5`\xfe?\xbc'
b'\x02\x02\x00\x00\xd1_\x00\x00Q\xdb\x00\x00\x07\xa8`\xfe?\xbc\x00\x85\x1c,`\xfe?\xbc'
b'\x02\x02\x00\x00\xcf\xbb\x005H\x87\xff\xff\xd0\xad`\xfe?\xbd\x00\x0e3\xf0`\xfe?\xbc'
b'\x02\x02\x00\x00\xd1]\x00\x00\x82\xaa\xff\xff\xd69`\xfe?\xbd\x00f\xf8\xf0`\xfe?\xbd'
b'\x02\x02\x00\x00\xd1]\x00\x00\x82x\xff\xff\xd6\x07`\xfe?\xbe\x00f\xfaN`\xfe?\xbe'
b'\x02\x02\x00\x00\xd1_\x00\x00Q\xea\x00\x00\x07\xb7`\xfe?\xbe\x00\x85\x1f\xe2`\xfe?\xbe'


b'\x02\x02\x00\x00\xd1]\x00\x00\x86\xba\xff\xff\xdaI`\xfe\x87\x9f\x00\x00\x00\x05\x00\x03\xa4?\x00\x06\xb8\x82\x00\x07\xcd]\x00\x00\x85\x98\x00\x00\x86\xbf'
CompactMarketData(exchange=2, token=53597, ltp=344.9, change=4294957641, exchange_timestamp=datetime.datetime(2021, 7, 26, 15, 29, 59), volume=5)
b'\x02\x02\x00\x00\xd1_\x00\x00HD\xff\xff\xfe\x11`\xfe\x87\x9f\x00\x00\x00\x05\x00\x02m\xb3\x00\x0c\xbcZ\x00\t\xf9\xcf\x00\x00HI\x00\x00I\xb6'
CompactMarketData(exchange=2, token=53599, ltp=185.0, change=4294966801, exchange_timestamp=datetime.datetime(2021, 7, 26, 15, 29, 59), volume=5)
b'\x02\x02\x00\x00\xcf\xbb\x005W\xeb\xff\xff\xe0\x11`\xfe\x87\x9f\x000\x1f\x15\x00:\xd0\xa4\x00\x16X\xe6\x00\x16\xcez\x005R\xe6\x005W\xcd'
CompactMarketData(exchange=2, token=53179, ltp=34959.15, change=4294959121, exchange_timestamp=datetime.datetime(2021, 7, 26, 15, 29, 59), volume=3153685)
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88H\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88H\x00\x00\x00\x00`\xfe\x88H'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88H\x00\x00\x00\x00`\xfe\x88H'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88I\x00\x00\x00\x00`\xfe\x88I'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88I\x00\x00\x00\x00`\xfe\x88I'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88I\x00\x00\x00\x00`\xfe\x88I'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88J\x00\x00\x00\x00`\xfe\x88J'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88J\x00\x00\x00\x00`\xfe\x88J'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88J\x00\x00\x00\x00`\xfe\x88J'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88K\x00\x00\x00\x00`\xfe\x88K'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88K\x00\x00\x00\x00`\xfe\x88K'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88K\x00\x00\x00\x00`\xfe\x88K'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88L\x00\x00\x00\x00`\xfe\x88L'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88L\x00\x00\x00\x00`\xfe\x88L'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88L\x00\x00\x00\x00`\xfe\x88L'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88M\x00\x00\x00\x00`\xfe\x88M'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88M\x00\x00\x00\x00`\xfe\x88M'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88M\x00\x00\x00\x00`\xfe\x88M'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88N\x00\x00\x00\x00`\xfe\x88N'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88N\x00\x00\x00\x00`\xfe\x88N'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88N\x00\x00\x00\x00`\xfe\x88N'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88O\x00\x00\x00\x00`\xfe\x88O'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88O\x00\x00\x00\x00`\xfe\x88O'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88O\x00\x00\x00\x00`\xfe\x88O'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88P\x00\x00\x00\x00`\xfe\x88P'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88P\x00\x00\x00\x00`\xfe\x88P'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88P\x00\x00\x00\x00`\xfe\x88P'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88Q\x00\x00\x00\x00`\xfe\x88Q'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88Q\x00\x00\x00\x00`\xfe\x88Q'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88Q\x00\x00\x00\x00`\xfe\x88Q'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88R\x00\x00\x00\x00`\xfe\x88R'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88R\x00\x00\x00\x00`\xfe\x88R'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88R\x00\x00\x00\x00`\xfe\x88R'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88S\x00\x00\x00\x00`\xfe\x88S'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88S\x00\x00\x00\x00`\xfe\x88S'
b'\x02\x01\x00\x00e\xa1\x00\x00\x04\xdd\x00\x00\x00\x00`\xfe\x88S\x00\x00\x00\x00`\xfe\x88S'
b'\x02\x01\x00\x00e\x90\x00\x18%m\x00\x00\x00\x00`\xfe\x88T\x00\x00\x00\x00`\xfe\x88T'
b'\x02\x01\x00\x00e\x99\x005T:\x00\x00\x00\x00`\xfe\x88T\x00\x00\x00\x00`\xfe\x88T'

"""